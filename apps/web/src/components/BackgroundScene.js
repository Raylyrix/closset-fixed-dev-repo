import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import { useMemo } from 'react';
import { Environment, Sky, Stars } from '@react-three/drei';
export const BackgroundScene = ({ backgroundType, intensity = 1, rotation = 0 }) => {
    const scene = useMemo(() => {
        switch (backgroundType) {
            case 'studio':
                return (_jsxs(_Fragment, { children: [_jsx(Environment, { preset: "studio", background: false, resolution: 1024, blur: 0.1 }), _jsx("ambientLight", { intensity: 0.8 * intensity }), _jsx("hemisphereLight", { args: [0xffffff, 0x444444, 0.8 * intensity], position: [0, 10, 0] }), _jsx("directionalLight", { position: [5, 8, 5], intensity: 2.5 * intensity, castShadow: true, "shadow-mapSize-width": 2048, "shadow-mapSize-height": 2048, "shadow-camera-far": 50, "shadow-camera-left": -10, "shadow-camera-right": 10, "shadow-camera-top": 10, "shadow-camera-bottom": -10 }), _jsx("directionalLight", { position: [-3, 6, -3], intensity: 1.5 * intensity, color: "#fff7e6" }), _jsx("directionalLight", { position: [0, 4, -8], intensity: 1.2 * intensity, color: "#e6f3ff" }), _jsx("directionalLight", { position: [0, 12, 0], intensity: 1.0 * intensity, color: "#ffffff" })] }));
            case 'outdoor':
                return (_jsxs(_Fragment, { children: [_jsx(Sky, { sunPosition: [1, 0.8, 1], rayleigh: 0.3, turbidity: 0.1, mieCoefficient: 0.003, mieDirectionalG: 0.9, distance: 450000 }), _jsx("ambientLight", { intensity: 0.8 * intensity }), _jsx("directionalLight", { position: [5, 8, 5], intensity: 3.0 * intensity, castShadow: true, "shadow-mapSize-width": 2048, "shadow-mapSize-height": 2048, "shadow-camera-far": 100, "shadow-camera-left": -20, "shadow-camera-right": 20, "shadow-camera-top": 20, "shadow-camera-bottom": -20, color: "#fff7e6" }), _jsx("hemisphereLight", { args: [0x87ceeb, 0x444444, 1.0 * intensity], position: [0, 20, 0] }), _jsx("directionalLight", { position: [0, -5, 0], intensity: 0.8 * intensity, color: "#90EE90" })] }));
            case 'indoor':
                return (_jsxs(_Fragment, { children: [_jsx(Environment, { preset: "apartment", background: false, resolution: 1024, blur: 0.1 }), _jsx("ambientLight", { intensity: 0.6 * intensity }), _jsx("pointLight", { position: [0, 8, 0], intensity: 2.5 * intensity, castShadow: true, "shadow-mapSize-width": 1024, "shadow-mapSize-height": 1024, color: "#fff7e6", distance: 20, decay: 1.5 }), _jsx("pointLight", { position: [-4, 6, 0], intensity: 1.5 * intensity, color: "#ffaa00", distance: 15, decay: 1.5 }), _jsx("pointLight", { position: [4, 6, 0], intensity: 1.5 * intensity, color: "#ffaa00", distance: 15, decay: 1.5 }), _jsx("directionalLight", { position: [0, 4, 8], intensity: 1.2 * intensity, color: "#e6f3ff" })] }));
            case 'night':
                return (_jsxs(_Fragment, { children: [_jsx(Stars, { radius: 100, depth: 50, count: 8000, factor: 4, saturation: 0.1, fade: true, speed: 0.5 }), _jsx("ambientLight", { intensity: 0.3 * intensity }), _jsx("directionalLight", { position: [0, 15, 0], intensity: 1.5 * intensity, color: "#4169e1", castShadow: true, "shadow-mapSize-width": 1024, "shadow-mapSize-height": 1024 }), _jsx("pointLight", { position: [0, 8, 0], intensity: 1.2 * intensity, color: "#ffff00", distance: 25, decay: 1.5 }), _jsx("pointLight", { position: [-8, 4, 0], intensity: 0.8 * intensity, color: "#ff69b4", distance: 20, decay: 1.5 }), _jsx("pointLight", { position: [8, 4, 0], intensity: 0.8 * intensity, color: "#00ffff", distance: 20, decay: 1.5 })] }));
            case 'beach':
                return (_jsxs(_Fragment, { children: [_jsx(Sky, { sunPosition: [1, 0.6, 1], rayleigh: 0.2, turbidity: 0.05, mieCoefficient: 0.002, mieDirectionalG: 0.95, distance: 450000 }), _jsx("ambientLight", { intensity: 1.0 * intensity }), _jsx("directionalLight", { position: [8, 10, 8], intensity: 3.5 * intensity, castShadow: true, "shadow-mapSize-width": 2048, "shadow-mapSize-height": 2048, color: "#fff7e6" }), _jsx("hemisphereLight", { args: [0x87ceeb, 0x444444, 1.2 * intensity], position: [0, 20, 0] }), _jsx("directionalLight", { position: [0, -3, 0], intensity: 1.0 * intensity, color: "#f4a460" }), _jsx("directionalLight", { position: [0, 2, -15], intensity: 0.8 * intensity, color: "#4169e1" })] }));
            default:
                return (_jsxs(_Fragment, { children: [_jsx(Environment, { preset: "studio", background: false, resolution: 1024, blur: 0.1 }), _jsx("ambientLight", { intensity: 0.8 * intensity }), _jsx("hemisphereLight", { args: [0xffffff, 0x444444, 0.8 * intensity], position: [0, 10, 0] }), _jsx("directionalLight", { position: [5, 8, 5], intensity: 2.5 * intensity, castShadow: true, "shadow-mapSize-width": 2048, "shadow-mapSize-height": 2048 }), _jsx("directionalLight", { position: [-3, 6, -3], intensity: 1.5 * intensity, color: "#fff7e6" })] }));
        }
    }, [backgroundType, intensity, rotation]);
    return _jsx(_Fragment, { children: scene });
};
